{"version":3,"sources":["webpack:///./src/pages/applications/liberty/db2.mdx"],"names":["name","Title","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"oOAasBA,E,4DALTC,G,UAAQ,kBAAM,6DACO,uBADP,IACc,qEAE5BC,EAAe,GAOtBC,GALgBH,EAKgB,kBALR,SAA6BI,GAEzD,OADAC,QAAQC,KAAK,aAAeN,EAAO,2EAC5B,kBAASI,KAIZG,EAAc,CAClBN,QACAC,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,0GAEF,wMACA,sEACA,sBACE,kBAAIC,WAAW,MAAf,yFAEF,uBAAK,oBAAMA,WAAW,OAAjB,iFAEL,oDACA,sBACE,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,QAA5B,kBAAgG,0BAAYA,WAAW,MAAvB,cAAhG,QAAgK,0BAAYA,WAAW,MAAvB,WAAhK,eAAoO,0BAAYA,WAAW,MAAvB,OAApO,8BAEF,uBAAK,oBAAMA,WAAW,OAAjB,0CAIL,2DACA,sBACE,kBAAIA,WAAW,MAAf,4CAAiE,0BAAYA,WAAW,MAAvB,aAAjE,KAA6H,0BAAYA,WAAW,MAAvB,mBAA7H,KAA+L,0BAAYA,WAAW,MAAvB,oBAA/L,QAAqQ,0BAAYA,WAAW,MAAvB,WAArQ,MAEF,uBAAK,oBAAMA,WAAW,OAAjB,uNAOL,wHAAuG,0BAAYA,WAAW,KAAvB,sBACvG,sBACE,kBAAIA,WAAW,MAAf,sEAA2F,0BAAYA,WAAW,MAAvB,qBAA3F,WAMNH,EAAWI,gBAAiB","file":"component---src-pages-applications-liberty-db-2-mdx-a403943c999c770680ed.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/modernization-playbook/modernization-playbook/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const Title = () => <span>\nModernizing runtimes with Liberty <br /> <h2>Deploy DB2 container with ORDER database</h2>\n  </span>;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  Title,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Configure the ORDER database required for the CustomerOrderResource application.`}</p>\n    </PageDescription>\n    <p>{`This section covers how to deploy a DB2 container to Red Hat OpenShift that has been pre-configured with the ORDER database required for the CustomerOrderResource application.`}</p>\n    <h2>{`Clone a repository (if you haven’t already…)`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Issue the following command to clone the repository that contains the required files`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`git clone https://github.com/ibm-cloud-architecture/appmod-liberty-toolkit\n`}</code></pre>\n    <h2>{`Navigate to the DB2 folder`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`yaml`}</inlineCode>{` files for the `}<inlineCode parentName=\"li\">{`Deployment`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Service`}</inlineCode>{` are in the `}<inlineCode parentName=\"li\">{`db2`}</inlineCode>{` folder of the repository`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`cd appmod-liberty-toolkit\n\ncd db2\n`}</code></pre>\n    <h2>{`Deploy the DB2 image to OpenShift`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Issue the following commands to create a `}<inlineCode parentName=\"li\">{`namespace`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`service account`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`deploymentconfig`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`service`}</inlineCode>{`:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create ns db2\noc project db2\noc create serviceaccount mysvcacct -n db2\noc adm policy add-scc-to-user privileged system:serviceaccount:db2:mysvcacct\noc apply -f db2-dc.yaml\noc apply -f db2-service.yaml\n`}</code></pre>\n    <p>{`The DB2 database will take a few minutes to start and will then be accessible in the Cluster at `}<inlineCode parentName=\"p\">{`db2.db2.svc:50000`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`If you want to expose the database outside of the cluster, use the `}<inlineCode parentName=\"li\">{`db2-nodeport.yaml`}</inlineCode>{` file`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}