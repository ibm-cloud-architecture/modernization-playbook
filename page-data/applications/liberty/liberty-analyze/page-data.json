{"componentChunkName":"component---src-pages-applications-liberty-liberty-analyze-mdx","path":"/applications/liberty/liberty-analyze/","result":{"pageContext":{"frontmatter":{"title":"Analyze","description":"This section covers how to use IBM Cloud Transformation Advisor to analyze an existing traditional WebSphere application."},"relativePagePath":"/applications/liberty/liberty-analyze.mdx","titleType":"append","MdxNode":{"id":"a00273a6-3648-5d3a-8fdd-e4c95d4f4ffb","children":[],"parent":"cd7abf92-22db-5b65-9267-965bc6ab0be1","internal":{"content":"---\ntitle: Analyze\ndescription: This section covers how to use IBM Cloud Transformation Advisor to analyze an existing traditional WebSphere application.\n---\n\nexport const Title = () => (\n  <span>\nModernizing runtimes with Liberty <br/> <h2>Analyze existing applications</h2>\n  </span>\n);\n\n<PageDescription>\n\nThis section covers how to use [IBM Cloud Transformation Advisor](https://www.ibm.com/cloud/garage/practices/learn/ibm-transformation-advisor) to analyze an existing traditional WebSphere application.\n</PageDescription>\n\nFor this scenario the WebSphere Liberty runtime is chosen as the target runtime and the intention is to migrate this application with minimal code changes. WebSphere Liberty is a fast, dynamic, and easy-to-use Java application server, built on the open source Open Liberty project. Ideal or the cloud, Liberty is a combination of IBM technology and open source software, with fast startup times (<2 seconds), no server restarts to pick up changes, and a simple XML configuration.\n\n\n## Summary\nThis section has the following steps:\n\n<AnchorLinks small>\n  <AnchorLink>Introduction to IBM Cloud Transformation Advisor</AnchorLink>\n  <AnchorLink>Install IBM Cloud Transformation Advisor</AnchorLink>\n  <AnchorLink>Scan a WebSphere Environment or use the pre-provided file</AnchorLink>\n  <AnchorLink>Download the Data Collector</AnchorLink>\n  <AnchorLink>Run the Data Collector </AnchorLink>\n  <AnchorLink>Upload the Data Collector results </AnchorLink>\n  <AnchorLink>Analyze the Recommendations</AnchorLink>\n</AnchorLinks>\n\n## Introduction to IBM Cloud Transformation Advisor\nIBM Cloud Transformation Advisor helps you access, analyze and modernize middleware based apps into IBM Cloud(s). It categorizes Java EE apps and MQ queue managers as simple, medium and complex based on migration complexity and provides guidance for modernization. IBM Cloud Transformation Advisor can accelerate the process to move your on-premises apps to cloud, minimize migration errors and risks, and reduce time to market in five steps.\n\nYou can use IBM Transformation Advisor for these activities:\n- Identify the Java EE programming models in an app\n- Determine the complexity of apps by reviewing a high-level inventory of the content and structure of each app\n- Highlight the Java EE programming model and WebSphere API differences between the profile types\n- Learn any Java EE specification implementation differences that might affect the app\n\nThe tool also provides suggestions for the right-fit IBM WebSphere Application Server edition and offers advice, practices, and potential solutions to move apps to WebSphere Liberty or to newer versions of WebSphere Application Server.\n\n## Note\nIf you don't have an environment to scan a [sample IBM Cloud Transformation Advisor Data Collector results file](https://github.com/ibm-cloud-architecture/appmod-liberty-tekton/blob/master/AppSrv01.zip) has been provided for you and you can still complete the steps in this exercise.\n\n## Install IBM Cloud Transformation Advisor\nIBM Cloud Transformation Advisor is split in to two components (the `analysis engine` and the `data collector`). You can choose to between installing the `analysis engine` in to an Kubernetes Cluster or locally on a machine with Docker.\n\n[Installing IBM Cloud Transformation Advisor in to your Kubernetes Cluster](https://www.ibm.com/support/knowledgecenter/SS5Q6W/gettingStarted/operatorHub.html)\n\n[Installing IBM Cloud Transformation Advisor locally](https://www.ibm.com/support/knowledgecenter/en/SS5Q6W/gettingStarted/deployTALocal.html)\n\n## Scan a WebSphere Environment or use the pre-provided file\nIf you have configured traditional WebSphere ND with the Customer Order Services application using the provided [instructions](https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/was855) then you can proceed with the `Download the Data Collector` and `Run the Data Collector` steps below.\n\nAlternatively, you can use the provided Data Collector [results file](https://github.com/ibm-cloud-architecture/appmod-liberty-tekton/blob/master/AppSrv01.zip) and jump to the [Upload the Data Collector results](#upload-the-data-collector-results) section.\n\n### Download the Data Collector\nOnce IBM Cloud Transformation Advisor is installed, it is necessary to create a new Workspace and Collection and then download the **Data Collector** that will be used to examine the existing environment and applications.\n\n1. Open IBM Cloud Transformation Advisor in a browser and click the button to create a new **Workspace**\n  ![Home Page](images/liberty-analyze/workspace1.jpg)\n\n2. Enter a Workspace name such as `CustomerOrderServices` and click **Next**\n  ![Workspace](images/liberty-analyze/workspace2.jpg)\n\n3. Enter a Collection name such as `WAS855_AppSrv01` and click **Let's go**\n  ![Collection](images/liberty-analyze/workspace3.jpg)\n\n4. When the **No recommendations available** page is displayed, click the **Data Collector** button\n  ![Collector](../was90/images/tWAS-analyze/collector.jpg)\n\n5. When the **Data Collector** page is displayed, select the **Source Operating System** for your environment and click the **Download** button to download the Data Collector.\n  ![Download](images/liberty-analyze/download.jpg)\n\n  This results in a file with a name similar to `transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz` being downloaded.\n\n\n### Run the Data Collector\nUpload the Data Collector zip file that was downloaded from IBM Cloud Transformation Advisor in the previous step to the machine that the WebSphere ND Deployment Manager or the Standalone WebSphere Application Server is installed. The directory used arbitrary.\n\n1. Navigate to the directory you uploaded the `transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz` file to and issue the following commands to extract the Data Collector:\n  ```bash\n  mkdir datacollector\n  cd datacollector\n  mv transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz .\n  tar -zxvf transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz\n  cd transformationadvisor-*\n  ```\n\n2. It is necessary to modify the scan performed by the Data Collector to include the `org.pwte` package as the Data Collector doesn't scan `org.*` packages by default. Open the `conf/customCmd.properties` file and modify it as shown below:\n  ```bash\n  scan_opt=--excludePackages=ch.qos,com.fasterxml,com.ibm,com.informix,com.lowagie,com.mchange,com.meterware,com.microsoft,com.sun,com.sybase,freemarker,groovy,java,javax,net,oracle,sqlj,sun,twitter4j,_ibmjsp --includePackages=org.pwte\n  #java_opt=-Xmx2g\n  ```\n\n2. The following command assumes that WebSphere Application Server v855 is installed to `/opt/IBM/WebSphere/AppServer855` with a **profile** named `AppSrv01` and that the **administration user** is `wasadmin` with a **password** of `wasadmin`. Modify and issue the following command as necessary to execute the Data Collector against the WebSphere environment:\n  ```bash\n  ./bin/transformationadvisor -w /opt/IBM/WebSphere/AppServer855 -p AppSrv01 wasadmin wasadmin\n  ```\n\n3. When prompted, accept the **license agreement**. The Data Collection process will now start and will analyze all of the applications installed in the WebSphere Application Server environment and will also collect the related Java EE artifacts such as Data Sources and JMS definitions.\n\n4. When the analysis is complete, the Data Collector will attempt to upload the collection results to IBM Cloud Transformation Advisor. If this is successful, you can skip to the **Analyze the Recommendations** section. If not, you will receive an error at the end of Data Collection and will find a file named `AppSrv01.zip` in your current directory as shown below.\n\n  ```bash\n  ~/datacollector/transformationadvisor-1.9.6# ls -la *.zip\n  -rw-r--r-- 1 root root 625493 Jun 12 12:58 AppSrv01.zip\n  ```\n\n  Download this **Data Collector Results zip** file ready for uploading to IBM Cloud Transformation Advisor in the next section\n\n### Upload the Data Collector results\nIn this section the results from the Data Collector will be uploaded to IBM Cloud Transformation Advisor.\n\n1. In the IBM Cloud Transformation Advisor web browser session, click the **Recomendations** link in the top left corner and then click the **Upload data** button as shown below\n  ![Upload](images/liberty-analyze/upload1.jpg)\n\n2. When the **Upload data** dialog is displayed, use the **Drop or Add File** button to select the **Data Collector Results zip** file that was downloaded in the previous section. Click **Upload**\n  ![Upload2](images/liberty-analyze/upload2.jpg)\n\n  After a few moments the upload of the data collector results will be completed.\n\n### Analyze the Recommendations\nOnce the Data Collector Results have been uploaded to IBM Cloud Transformation Advisor a set of recommendations will be created and shown on the **Recommendations** page. In this section the recommendations will be analyzed and interpreted.\n\n1. The Data Collector analyzed all of the applications running on the traditional WebSphere profile and displays a row in the chart for each application and potential target runtime.\n  ![tWAS](images/liberty-analyze/analysis1b.jpg)\n  In the case of the **CustomerOrderServicesApp.ear** application, IBM Cloud Transformation Advisor has determined that the application can be modernized to run on either **WebSphere Liberty** (which supports JEE6, 7 and 8) in 1.5 days or **Open Liberty** (which supports JEE7 or 8) in 9.5 days. Click on the **CustomerOrderServicesApp.ear** application name on the **WebSphere Liberty** row to see more information.\n\n3. Review the analysis results and scroll down to the **Complexity Rules** section and open the section. Note that IBM Cloud Transformation Advisor has determined that code changes are required before this application will run on WebSphere Liberty.\n  ![tWAS](images/liberty-analyze/rules1.jpg)\n\n4. Scroll down to the **Issues details** section and open the section. Note that IBM Cloud Transformation Advisor has detected that there are issues with lookups for Enterprise JavaBeans and with accessing the Apache Wink APIs.\n  ![tWAS](images/liberty-analyze/issues1.jpg)\n\n5. In order to review the IBM Cloud Transformation Advisor results in more detail, scroll to the bottom of the analysis page and click on the **Analysis Report** link\n  ![Report](images/liberty-analyze/reports.jpg)\n\n6. When the warning dialog is displayed, click **OK**\n  ![Warning](images/liberty-analyze/reports2.jpg)\n\n7. The **Detailed Migration Analysis Report** will be displayed which show the results of the migration rules that were executed by the Data Collector and returned results. Scroll down to the **Severe Rules** section and click on the **Show rule help** link for each of the results. Review the recommendations.\n  ![JPA](images/liberty-analyze/severe.jpg)\n\n  **Behavior change on lookups for Enterprise JavaBeans** In Liberty, EJB components are not bound to a server root Java Naming and Directory Interface (JNDI) namespace as they are in WebSphere Application Server traditional. The fix for this is to change the three classes that use `ejblocal` to use the correct URL for Liberty\n\n  **The user of system provided Apache Wink APIs requires configuration** To use system-provided third-party APIs in Liberty applications, you must configure the applications to include the APIs. In WebSphere Application Server traditional, these APIs are available without configuration. This is a configuration only change and can be achieved by using a `classloader` definition in the Liberty server.xml file.\n\n### Final Analysis\nThe intention of this traditional WebSphere V855 --> WebSphere Liberty scenario is to migrate the Customer Order Services application to the cloud-ready new runtime with minimal code changes.\n\nIBM Cloud Transformation Advisor was used to analyze the application for compatibility with WebSphere Liberty and determined that only small changes to three classes would be required.\n\nWhile this scenario will move the application to the cloud-ready WebSphere Liberty runtime in a container, it will not **modernize** the application architecture and code in any way.\n\nNow proceed to the [Liberty - Build](liberty-build) section where the process of making the code changes and configuring the Liberty runtime will be covered step-by-step\n","type":"Mdx","contentDigest":"06c6bc1cfd8e346048216af4e719f7f7","counter":451,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Analyze","description":"This section covers how to use IBM Cloud Transformation Advisor to analyze an existing traditional WebSphere application."},"exports":{},"rawBody":"---\ntitle: Analyze\ndescription: This section covers how to use IBM Cloud Transformation Advisor to analyze an existing traditional WebSphere application.\n---\n\nexport const Title = () => (\n  <span>\nModernizing runtimes with Liberty <br/> <h2>Analyze existing applications</h2>\n  </span>\n);\n\n<PageDescription>\n\nThis section covers how to use [IBM Cloud Transformation Advisor](https://www.ibm.com/cloud/garage/practices/learn/ibm-transformation-advisor) to analyze an existing traditional WebSphere application.\n</PageDescription>\n\nFor this scenario the WebSphere Liberty runtime is chosen as the target runtime and the intention is to migrate this application with minimal code changes. WebSphere Liberty is a fast, dynamic, and easy-to-use Java application server, built on the open source Open Liberty project. Ideal or the cloud, Liberty is a combination of IBM technology and open source software, with fast startup times (<2 seconds), no server restarts to pick up changes, and a simple XML configuration.\n\n\n## Summary\nThis section has the following steps:\n\n<AnchorLinks small>\n  <AnchorLink>Introduction to IBM Cloud Transformation Advisor</AnchorLink>\n  <AnchorLink>Install IBM Cloud Transformation Advisor</AnchorLink>\n  <AnchorLink>Scan a WebSphere Environment or use the pre-provided file</AnchorLink>\n  <AnchorLink>Download the Data Collector</AnchorLink>\n  <AnchorLink>Run the Data Collector </AnchorLink>\n  <AnchorLink>Upload the Data Collector results </AnchorLink>\n  <AnchorLink>Analyze the Recommendations</AnchorLink>\n</AnchorLinks>\n\n## Introduction to IBM Cloud Transformation Advisor\nIBM Cloud Transformation Advisor helps you access, analyze and modernize middleware based apps into IBM Cloud(s). It categorizes Java EE apps and MQ queue managers as simple, medium and complex based on migration complexity and provides guidance for modernization. IBM Cloud Transformation Advisor can accelerate the process to move your on-premises apps to cloud, minimize migration errors and risks, and reduce time to market in five steps.\n\nYou can use IBM Transformation Advisor for these activities:\n- Identify the Java EE programming models in an app\n- Determine the complexity of apps by reviewing a high-level inventory of the content and structure of each app\n- Highlight the Java EE programming model and WebSphere API differences between the profile types\n- Learn any Java EE specification implementation differences that might affect the app\n\nThe tool also provides suggestions for the right-fit IBM WebSphere Application Server edition and offers advice, practices, and potential solutions to move apps to WebSphere Liberty or to newer versions of WebSphere Application Server.\n\n## Note\nIf you don't have an environment to scan a [sample IBM Cloud Transformation Advisor Data Collector results file](https://github.com/ibm-cloud-architecture/appmod-liberty-tekton/blob/master/AppSrv01.zip) has been provided for you and you can still complete the steps in this exercise.\n\n## Install IBM Cloud Transformation Advisor\nIBM Cloud Transformation Advisor is split in to two components (the `analysis engine` and the `data collector`). You can choose to between installing the `analysis engine` in to an Kubernetes Cluster or locally on a machine with Docker.\n\n[Installing IBM Cloud Transformation Advisor in to your Kubernetes Cluster](https://www.ibm.com/support/knowledgecenter/SS5Q6W/gettingStarted/operatorHub.html)\n\n[Installing IBM Cloud Transformation Advisor locally](https://www.ibm.com/support/knowledgecenter/en/SS5Q6W/gettingStarted/deployTALocal.html)\n\n## Scan a WebSphere Environment or use the pre-provided file\nIf you have configured traditional WebSphere ND with the Customer Order Services application using the provided [instructions](https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/was855) then you can proceed with the `Download the Data Collector` and `Run the Data Collector` steps below.\n\nAlternatively, you can use the provided Data Collector [results file](https://github.com/ibm-cloud-architecture/appmod-liberty-tekton/blob/master/AppSrv01.zip) and jump to the [Upload the Data Collector results](#upload-the-data-collector-results) section.\n\n### Download the Data Collector\nOnce IBM Cloud Transformation Advisor is installed, it is necessary to create a new Workspace and Collection and then download the **Data Collector** that will be used to examine the existing environment and applications.\n\n1. Open IBM Cloud Transformation Advisor in a browser and click the button to create a new **Workspace**\n  ![Home Page](images/liberty-analyze/workspace1.jpg)\n\n2. Enter a Workspace name such as `CustomerOrderServices` and click **Next**\n  ![Workspace](images/liberty-analyze/workspace2.jpg)\n\n3. Enter a Collection name such as `WAS855_AppSrv01` and click **Let's go**\n  ![Collection](images/liberty-analyze/workspace3.jpg)\n\n4. When the **No recommendations available** page is displayed, click the **Data Collector** button\n  ![Collector](../was90/images/tWAS-analyze/collector.jpg)\n\n5. When the **Data Collector** page is displayed, select the **Source Operating System** for your environment and click the **Download** button to download the Data Collector.\n  ![Download](images/liberty-analyze/download.jpg)\n\n  This results in a file with a name similar to `transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz` being downloaded.\n\n\n### Run the Data Collector\nUpload the Data Collector zip file that was downloaded from IBM Cloud Transformation Advisor in the previous step to the machine that the WebSphere ND Deployment Manager or the Standalone WebSphere Application Server is installed. The directory used arbitrary.\n\n1. Navigate to the directory you uploaded the `transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz` file to and issue the following commands to extract the Data Collector:\n  ```bash\n  mkdir datacollector\n  cd datacollector\n  mv transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz .\n  tar -zxvf transformationadvisor-Linux_CustomerOrderServices_WAS855_AppSrv01.tgz\n  cd transformationadvisor-*\n  ```\n\n2. It is necessary to modify the scan performed by the Data Collector to include the `org.pwte` package as the Data Collector doesn't scan `org.*` packages by default. Open the `conf/customCmd.properties` file and modify it as shown below:\n  ```bash\n  scan_opt=--excludePackages=ch.qos,com.fasterxml,com.ibm,com.informix,com.lowagie,com.mchange,com.meterware,com.microsoft,com.sun,com.sybase,freemarker,groovy,java,javax,net,oracle,sqlj,sun,twitter4j,_ibmjsp --includePackages=org.pwte\n  #java_opt=-Xmx2g\n  ```\n\n2. The following command assumes that WebSphere Application Server v855 is installed to `/opt/IBM/WebSphere/AppServer855` with a **profile** named `AppSrv01` and that the **administration user** is `wasadmin` with a **password** of `wasadmin`. Modify and issue the following command as necessary to execute the Data Collector against the WebSphere environment:\n  ```bash\n  ./bin/transformationadvisor -w /opt/IBM/WebSphere/AppServer855 -p AppSrv01 wasadmin wasadmin\n  ```\n\n3. When prompted, accept the **license agreement**. The Data Collection process will now start and will analyze all of the applications installed in the WebSphere Application Server environment and will also collect the related Java EE artifacts such as Data Sources and JMS definitions.\n\n4. When the analysis is complete, the Data Collector will attempt to upload the collection results to IBM Cloud Transformation Advisor. If this is successful, you can skip to the **Analyze the Recommendations** section. If not, you will receive an error at the end of Data Collection and will find a file named `AppSrv01.zip` in your current directory as shown below.\n\n  ```bash\n  ~/datacollector/transformationadvisor-1.9.6# ls -la *.zip\n  -rw-r--r-- 1 root root 625493 Jun 12 12:58 AppSrv01.zip\n  ```\n\n  Download this **Data Collector Results zip** file ready for uploading to IBM Cloud Transformation Advisor in the next section\n\n### Upload the Data Collector results\nIn this section the results from the Data Collector will be uploaded to IBM Cloud Transformation Advisor.\n\n1. In the IBM Cloud Transformation Advisor web browser session, click the **Recomendations** link in the top left corner and then click the **Upload data** button as shown below\n  ![Upload](images/liberty-analyze/upload1.jpg)\n\n2. When the **Upload data** dialog is displayed, use the **Drop or Add File** button to select the **Data Collector Results zip** file that was downloaded in the previous section. Click **Upload**\n  ![Upload2](images/liberty-analyze/upload2.jpg)\n\n  After a few moments the upload of the data collector results will be completed.\n\n### Analyze the Recommendations\nOnce the Data Collector Results have been uploaded to IBM Cloud Transformation Advisor a set of recommendations will be created and shown on the **Recommendations** page. In this section the recommendations will be analyzed and interpreted.\n\n1. The Data Collector analyzed all of the applications running on the traditional WebSphere profile and displays a row in the chart for each application and potential target runtime.\n  ![tWAS](images/liberty-analyze/analysis1b.jpg)\n  In the case of the **CustomerOrderServicesApp.ear** application, IBM Cloud Transformation Advisor has determined that the application can be modernized to run on either **WebSphere Liberty** (which supports JEE6, 7 and 8) in 1.5 days or **Open Liberty** (which supports JEE7 or 8) in 9.5 days. Click on the **CustomerOrderServicesApp.ear** application name on the **WebSphere Liberty** row to see more information.\n\n3. Review the analysis results and scroll down to the **Complexity Rules** section and open the section. Note that IBM Cloud Transformation Advisor has determined that code changes are required before this application will run on WebSphere Liberty.\n  ![tWAS](images/liberty-analyze/rules1.jpg)\n\n4. Scroll down to the **Issues details** section and open the section. Note that IBM Cloud Transformation Advisor has detected that there are issues with lookups for Enterprise JavaBeans and with accessing the Apache Wink APIs.\n  ![tWAS](images/liberty-analyze/issues1.jpg)\n\n5. In order to review the IBM Cloud Transformation Advisor results in more detail, scroll to the bottom of the analysis page and click on the **Analysis Report** link\n  ![Report](images/liberty-analyze/reports.jpg)\n\n6. When the warning dialog is displayed, click **OK**\n  ![Warning](images/liberty-analyze/reports2.jpg)\n\n7. The **Detailed Migration Analysis Report** will be displayed which show the results of the migration rules that were executed by the Data Collector and returned results. Scroll down to the **Severe Rules** section and click on the **Show rule help** link for each of the results. Review the recommendations.\n  ![JPA](images/liberty-analyze/severe.jpg)\n\n  **Behavior change on lookups for Enterprise JavaBeans** In Liberty, EJB components are not bound to a server root Java Naming and Directory Interface (JNDI) namespace as they are in WebSphere Application Server traditional. The fix for this is to change the three classes that use `ejblocal` to use the correct URL for Liberty\n\n  **The user of system provided Apache Wink APIs requires configuration** To use system-provided third-party APIs in Liberty applications, you must configure the applications to include the APIs. In WebSphere Application Server traditional, these APIs are available without configuration. This is a configuration only change and can be achieved by using a `classloader` definition in the Liberty server.xml file.\n\n### Final Analysis\nThe intention of this traditional WebSphere V855 --> WebSphere Liberty scenario is to migrate the Customer Order Services application to the cloud-ready new runtime with minimal code changes.\n\nIBM Cloud Transformation Advisor was used to analyze the application for compatibility with WebSphere Liberty and determined that only small changes to three classes would be required.\n\nWhile this scenario will move the application to the cloud-ready WebSphere Liberty runtime in a container, it will not **modernize** the application architecture and code in any way.\n\nNow proceed to the [Liberty - Build](liberty-build) section where the process of making the code changes and configuring the Liberty runtime will be covered step-by-step\n","fileAbsolutePath":"/home/runner/work/modernization-playbook/modernization-playbook/src/pages/applications/liberty/liberty-analyze.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}